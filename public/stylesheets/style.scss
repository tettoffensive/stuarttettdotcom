@import "basier-square";

$system-font: -apple-system, BlinkMacSystemFont,"Segoe UI", "Roboto", "Oxygen", "Ubuntu", "Cantarell", "Fira Sans", "Droid Sans", "Helvetica Neue", sans-serif;
$header-font: 'Basier Square', $system-font;
$subheader-font: 'Basier Square', $system-font;
$quote-font: 'Basier Square Italic', $system-font;
$body-font: 'Basier Square', $system-font;
$button-font: 'Basier Square Semibold', $system-font;

$black: #121212;
$white: #f1f1f1;
$dark: #3F4A48;
$light: #f1f1f1;
$accent: #54F0CE;
$text-light: #525252;
$error-color: #fd7f95;

$break-small: 375px;
$break-mobile: 660px;
$break-tablet: 968px;
$break-desktop-large: 1200px;

$progress-height: 4px;

*, *:before, *:after {
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

@mixin font-smoothing($value: on) {
  @if $value == on {
    -webkit-text-stroke: 0.45px rgba(0, 0, 0, 0.1);
    -webkit-font-smoothing: antialiased !important;
    -moz-osx-font-smoothing: grayscale !important;
    text-rendering: optimizeLegibility !important;
  }
  @else {
    .dropdown-content a {
      color: $black;
      padding: 12px 16px;
      text-decoration: none;
      display: block;
    }

    .dropdown-content a:focus {background-color: $white}
    .dropdown-content a:hover {background-color: $white}
    .dropdown-content a {
      color: $black;
      padding: 12px 16px;
      text-decoration: none;
      display: block;
    }

    .dropdown-content a:focus {background-color: $white}
    .dropdown-content a:hover {background-color: $white}
    -webkit-font-smoothing: subpixel-antialiased;
    -moz-osx-font-smoothing: auto;
  }
}

body {
  background: $light;
  @include font-smoothing(on);
  padding: 0;
  margin: 0;
  overscroll-behavior-y: none;
  font-size: 16px;

  @media screen and (min-width: $break-mobile) {
    /* font-size: calc([minimum size] + ([maximum size] - [minimum size]) * ((100vw - [minimum viewport width]) / ([maximum viewport width] - [minimum viewport width]))); */
    font-size: calc(16px + 2 * ((100vw - $break-mobile) / 308));
  }

  @media screen and (min-width: $break-tablet) {
    font-size: 18px;
  }
}

a, abbr, acronym, address, applet, article, aside, audio, b, big, blockquote,
body, canvas, caption, center, cite, code, dd, del, details, dfn, div, dl,
dt, em, embed, fieldset, figcaption, figure, footer, form, h1, h2, h3, h4,
h5, h6, hgroup, html, i, iframe, img, ins, kbd, legend, li, mark,
menu, nav, object, ol, output, p, pre, q, ruby, s, samp, section, small, span,
strike, strong, sub, summary, sup, table, tbody, td, tfoot, th, thead, time,
tr, tt, u, ul, var, video {
  // margin: 0;
  padding: 0;
  border: 0;
  font-family: $body-font;
  vertical-align: baseline;
  font-variant-ligatures: none;
}

h1, h2, h3, h4, h5, h6, .header1, .header2 {
  font-family: $header-font;
  font-style: normal;
  font-weight: normal;
  margin: 0;
  color: $black;
}

.z3 {
  z-index: 3;
}

/* For label shadow to be on top of content shadow */
.z2 {
  z-index: 2;
}

.z1 {
  z-index: 1;
}

.z0 {
  z-index: 0;
}

.image {
  background-repeat: no-repeat;
  background-position: center;

  -webkit-filter: drop-shadow(0px 5px 20px rgba(0,0,0,0.10));
  filter: drop-shadow(0px 5px 20px rgba(0,0,0,0.10));
}

.scatter-shapes {
  display: none;
  position: absolute;
  color: $white;
}

.image.cover {
  background-size: cover;
}

.image.contain {
  background-size: contain;
}

.nowrap {
  white-space: nowrap;
}

.shift {
  @media screen and (min-width: $break-tablet) {
    grid-column-end: -1;
    grid-column-start: span 2;
  }
}

.col3 {
  @media screen and (min-width: $break-tablet) {
    grid-column-start: 3;
    & + .one-col {
      grid-column-start: 1;
    }
  }
}

.bold-italic {
  font-style: italic;
  font-weight: 700;
}

.italic {
  font-style: italic;

  & h4 {
    font-style: italic;
  }
}

.bold {
  font-weight: 700;
}

.normal {
  font-weight: normal;
}

blockquote before, blockquote after, q before, q after {
  content: ''
}

blockquote h4 {
  color: $text-light;
  font-family: $quote-font;
}

.quote {
  font-family: $quote-font;
}

.fourSeventyTwoWide {
  grid-column-end: span 4;
  min-height: 65vmin;
  width: 100%;

  @media screen and (min-width: $break-tablet) {
    min-height: 472px;
  }
}

.fourSeventyTwo {
  grid-column-end: span 4;
  min-height: 65vmin;
  width: 100%;

  @media screen and (min-width: $break-tablet) {
    grid-column-end: span 2;
    min-height: 472px;
  }
}

.fourSeventyTwoNo {
  grid-column-end: span 4;
  min-height: 65vmin;
  width: 100%;

  @media screen and (min-width: $break-tablet) {
    grid-column-end: span 2;
  }
}

.row-span-2 {
  @media screen and (min-width: $break-tablet) {
    grid-row-end: span 2;
  }
}

.col-reset {
  grid-column-start: 1;
}

.fourSeventyTwo1 {
  grid-column-end: span 2;
  min-height: 65vmin;
  width: 100%;

  @media screen and (min-width: $break-tablet) {
    grid-column-end: span 1;
    min-height: 472px;
  }
}

.fourSeventyTwo3 {
  grid-column-end: span 2;
  min-height: 65vmin;
  width: 100%;

  @media screen and (min-width: $break-tablet) {
    grid-column-end: span 3;
    min-height: 472px;
  }
}

.one-blank-column {
  @media screen and (min-width: $break-mobile) {
    grid-column-start: 2;
  }
}

.fourSeventyTwoX {
  min-height: 65vmin;
  width: 100%;
}

#contentDetails {
  margin: auto;
  display: grid;
  width: calc(100% - 60px);
  grid-gap: 30px;
  overflow: visible;
  justify-items: center;
  position: relative;

  font-weight: normal;
  font-style: normal;
  font-variant-ligatures: none;

  text-align: left;
  letter-spacing: 0;
  line-height: 1.5em;
  background: $light;
  box-shadow: 0px 50px 50px 50px $light;

  & p {
    margin: 0px;
    color: $text-light;
  }

  & p:not(:last-child) {
    padding-bottom: 26px;
  }

  & > div:not(.overlap):not(.align-left) {
    align-self: start;
    justify-self: center;
  }

  & > * {
    will-change: transform;
  }

  @media screen and (min-width: $break-tablet) {
    max-width: 1482px;
    width: calc(100% - 160px);
    grid-template-columns: repeat(4, minmax(150px, 1fr));
    grid-gap: 120px;
    grid-auto-rows: minmax(50px, auto);
  }
}

.footer {
  display: flex;
  padding: 40px;

  & > * {
    margin: auto;
  }
}

.one-col {
  grid-column-end: span 4;

  @media screen and (min-width: $break-tablet) {
    grid-column-end: span 2;
  }
}

.two-col {
  max-width: 772px;
  grid-column-end: span 4;

  @media screen and (min-width: $break-tablet) {
    grid-column-end: span 2;
  }
}

.two-col-extra {
  max-width: 972px;
  grid-column-end: span 4;

  @media screen and (min-width: $break-tablet) {
    grid-column-end: span 2;
  }
}

.three-col {
  grid-column-end: span 4;
  @media screen and (min-width: $break-tablet) {
    grid-column-end: span 3;
  }
}

.grid-span {
  grid-column: span 4;
}

.credits {
  grid-column: span 4;
}

.normal-list {
  padding-bottom: 1em;
  list-style-type:decimal-leading-zero;
  padding-left: 1.5em;

  & > li {
    padding: 0.2em 0px;
    font-family: $quote-font;
  }
}

.dark-list {

  padding-bottom: 1em;

  & > li {
    padding: 0.2em 0px;
    display: inline;
    background: $dark;
    font-size: 1.333em;
    font-family: $quote-font;
    color: white;
    list-style-position: outside;
    box-shadow: 0.5em 0 0 $dark,-0.5em 0 0 $dark;
    line-height: 1.5em;

    &::after {
      display: block;
      content: '';
      padding: 20px;
    }

    &::before {
      display: block;
      color: $dark;
      font-size: 1.777em;
      transform: translate(-0.35em);
      padding: 0;
      margin: 0;
      font-family: 'Basier Square Semibold Italic', $system-font;
    }
  }

}

li.one {
  &::before {
    content: '01';
  }
}

li.two {
  &::before {
    content: '02';
  }
}

li.three {
  &::before {
    content: '03';
  }
}

.stackedImages {
  min-height: 10px;
  display: flex;
  flex-direction: column;
  width: 50%;
}

h1 span {
  font-size: inherit;
  font-family: inherit;
  font-weight: inherit;
}

figure:not(.image) {
  display: table;

  & > img {
    display: table-cell;
    vertical-align: bottom;
    width: 100%;
    height: auto;
  }
}

figcaption {
  display: table-caption;
  caption-side: bottom;
  padding: 10px;

  @media screen and (min-width: $break-mobile) {
    padding: 40px;
  }
}

.carousel {
  width: calc(100% - 60px);
  overflow: hidden;

  & ul {
    display: flex;
    flex-wrap: nowrap;
    flex-direction: row;
    list-style-type:none;
    margin:0;
    padding:0;
    overflow-x: scroll;
    -webkit-overflow-scrolling: touch;
    -ms-overflow-style: -ms-autohiding-scrollbar;
  }

  & li {
    flex: 0 0 auto;
    max-width: 100%;
    min-width: 100%;
    min-height: 200px;

    & img {
      width: 100%;
    }
  }
}

.fade-in {
  opacity: 0;
  transform: scaleX(0);
}

/* The progress container (grey background) */
.progress-container {
  transform-origin: left top;
  transition: all 0.5s ease;
  width: 100%;
  background: $white;
  height: 2px;

  @media screen and (min-width: $break-mobile) {
    height: $progress-height;
  }

  position: fixed;
  top: 0;
  left: 0;
  z-index: 2;
}

/* The progress bar (scroll indicator) */
.progress-bar {
  height: 100%;
  background: $accent;
  width: 0%;
}

@keyframes swapImage {
  0% {opacity: 0;}
  20% {opacity: 1;}
  33% {opacity: 1;}
  53% {opacity: 0;}
  100% {opacity: 0;}
}

.overlap {
  place-self: stretch;
  position: relative;
  width: calc(100% - 20px);

  & figure {
    -webkit-filter: drop-shadow(0px 10px 20px rgba(0,0,0,0.15));
    filter: drop-shadow(0px 10px 20px rgba(0,0,0,0.15));
    transition: z-index 1s ease;
  }

  & > .still2 {
    position: absolute;
  }

  & > .box1 {

  }

  & > .box2 {
    animation: swapImage 10s ease -2s infinite normal forwards running;
    top: 10px;
    left: 10px;
    position: absolute;
  }

  & > .box3 {
    animation: swapImage 10s ease -5s infinite normal forwards running;
    top: 20px;
    left: 20px;
    position: absolute;
  }

}

img.squiggle {
  grid-column-start: 1;
  grid-column-end: -1;
  align-self: start;
  place-self: start;
  width: 38vw;
  max-width: 800px;
  transform: translateX(-20px);
  opacity: 0.5;
}

.one-col img.squiggle {
  mix-blend-mode: multiply;
}

@function strip-unit($value) {
  @return $value / ($value * 0 + 1);
}

@mixin fluid-type($min-vw, $max-vw, $min-font-size, $max-font-size) {
  $u1: unit($min-vw);
  $u2: unit($max-vw);
  $u3: unit($min-font-size);
  $u4: unit($max-font-size);

  @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
    & {
      font-size: $min-font-size;
      @media screen and (min-width: $min-vw) {
        font-size: calc(#{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
      }
      @media screen and (min-width: $max-vw) {
        font-size: $max-font-size;
      }
    }
  }
}

.align-left {
  place-self: start;
}

.vertical-center {
  align-self: center;
}

div.special {
  min-width: 1px;
  grid-column-end: span 4;
  height: 3.157em;
}

// h1.special + h3 {
//   padding-top: 1em;
// }

h1 ~ p, h2 ~ p, h3 ~ p, h4 ~ p {
  margin-bottom: 24px;
  color: $text-light;
}

h1, h2, h3, h4 {
  margin-bottom: 17px;
}

h1 {
  font-size: 3.157em;
  line-height: 1.25em;
  letter-spacing: 0.05em;
}

h2 {
  font-size: 2.369em;
  line-height: 1.25em;
  font-family: $subheader-font;
  letter-spacing: 0.05em;
}

h3 {
  font-size: 1.777em;
  line-height: 1.2em;
  letter-spacing: 0px;
  font-family: $subheader-font;
}

h4 {
  font-size: 1.333em;
  line-height: 1.5em;
  font-family: $subheader-font;
}

small, .font_small {font-size: 0.75em;}

#message {
  width: 50%;
  max-width: 800px;
  margin: auto;
  margin-top: 8vmax;
  padding-top: 24px;

  & h3 {
    @media screen and (min-width: $break-tablet) {
      padding-top: 40px;
    }
  }
}

a {
  color: $dark;
  text-decoration: none;
  padding: 8px;
  outline: none;

  &::after {
    position: relative;
    font-weight: 700;
    filter: drop-shadow(-1px 0px 0px rgba(0,0,0,0.20));
    content: "\FEFF°";
    margin-left: 0.10em;
    font-size: 90%;
    top: -0.10em;
    color: $accent;
    font-feature-settings: 'caps' 1;
  }

  background: linear-gradient(to right, transparent 25%, white 25%, white 75%, transparent 75%);
  background-size: 400% 100%;
  background-position: right bottom;
  transition: all .2s ease-out;

  &:hover, &:focus {
    background-position: 50% bottom;
  }

  &:active {
    background-position: left bottom;
  }

}

.hidden {
  visibility: hidden;
  opacity: 0;
  max-height: 0px;
  padding: 0 !important;
  margin: 0 !important;
}

.wrapper {
  margin: auto;
  margin-top: 40px;
  width: 100%;
  max-width: 1024px;
  display: flex;
  flex-wrap: wrap;
  align-items: flex-start;

  @media screen and (min-width: $break-mobile) {
    margin-top: 100px;
    width: calc(100% - 16px);
  }
}

section.form {
  width: 100%;
  padding: 128px 64px 0px 64px;
}

h1 + h3, h1 + h4 {
  color: $text-light;
}

form.contact {
  display: flex;
  flex-direction: column;
  width: 100%;
  padding: 0px 64px 64px 64px;

  & label {
    line-height: 1.2em;
    letter-spacing: 0px;
    font-family: $subheader-font;
    font-size: 1.777em;
    margin: 64px 0px 24px 0px;
    outline: none;
    color: $black;
  }

  & input {
    min-width: 1em;
    overflow-x: hidden;
    transition: width 0.2s ease;
    line-height: 1.5em;
    font-family: $subheader-font;
    font-size: 1.333em;
    background-color: $light;
    border:none;
    border-bottom: 0px solid $black;
    color: $text-light;
    text-decoration: none;
    outline: none;

    & + .underline {
      display: block;
      content: '';
      width: 100%;
      border-bottom: 1px solid $text-light;
      transition: width 0.2s ease;
      min-width: 1em;
      opacity: 0.5;
    }

    &:valid:not(:focus):not(:placeholder-shown) + .underline {
      opacity: 1;
    }

    &:focus + .underline {
      border-bottom: 1px solid $black;
      opacity: 1;
    }

    &:invalid:not(:focus):not(:placeholder-shown) {
        color: $error-color;
        & + .underline {
          border-bottom: 1px solid $error-color;
        }
        & ~ .requirements {
          max-height: unset;
          padding: 16px 0px;
        }
    }

    &:invalid:focus:not(:placeholder-shown) {
      color: $text-light;
      & + .underline {
        border-bottom: 1px solid $black;
      }
      & ~ .requirements {
        max-height: 0;
        padding: 0;
      }
    }
  }

  .requirements {
    padding: 0px;
    transition: 0.2s ease;
    color: $error-color;
    font-family: $quote-font;
    font-size: 1em;
    max-height: 0px;
    overflow: hidden;
  }

  input::-webkit-input-placeholder,select::-webkit-input-placeholder,textarea::-webkit-input-placeholder {
    color: #a2a2a2
  }

  input::-moz-placeholder,select::-moz-placeholder,textarea::-moz-placeholder {
    opacity: 1;
    color: #a2a2a2
  }

  input:-ms-input-placeholder,select:-ms-input-placeholder,textarea:-ms-input-placeholder {
    color: #a2a2a2
  }

  & button {
    align-self: flex-end;
    line-height: 1.5em;
    font-family: $button-font;
    font-size: 1em;
    background: none;
    color: $black;
    text-decoration: none;
    cursor: pointer;
    border:none;
    outline: none;
    margin: 48px 0px 24px 0px;
    transform-origin: center;
    transform: scale(1);

    background: linear-gradient(to right, transparent 25%, white 25%, white 75%, transparent 75%);
    background-size: 400% 100%;
    background-position: right bottom;
    transition: all .2s ease-out;

    &:hover, &:focus {
      background-position: 50% bottom;
      transform: scale(0.95);
    }

    &:active {
      transition: all .1s ease-out;
      background-position: left bottom;
      transform: scale(1.5);
    }
  }
}
