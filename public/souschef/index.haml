!!! Strict
%html{:lang => "en"}
  %head
    %meta{:content => "width=device-width, minimum-scale=1, initial-scale=1, user-scalable=yes", :name => "viewport"}/
    %meta{:content => "Stuart Tett | Product Designer", :name => "description"}/
    /build:css /stylesheets/main.min.css
    %link{:href => "../stylesheets/fonts.css", :rel => "stylesheet", :type => "text/css"}/
    %link{:href => "../stylesheets/style.css", :rel => "stylesheet", :type => "text/css"}/
    %link{:href => "../stylesheets/reset.css", :rel => "stylesheet", :type => "text/css"}/
    /endbuild

    %link{:href => "/manifest.json", :rel => "manifest"}/
    %script{:src => "../bower_components/webcomponentsjs/webcomponents-loader.js"}
    %link{:href => "../src/stuarttettdotcom-app/stuarttettdotcom-app.html", :rel => "import"}/
    %title Stuart Tett | Product Designer
    %meta{:content => "text/html; charset=UTF-8", "http-equiv" => "content-type"}/
    %script{:async => "", :src => "https://www.googletagmanager.com/gtag/js?id=UA-42078109-2"}
    :javascript
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments)};
      gtag('js', new Date());

      gtag('config', 'UA-42078109-2');
    :javascript
      (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
        (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
        m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
      })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

      ga('create', 'UA-42078109-2', 'auto');
      ga('set', 'page', '/souschef');
      ga('send', 'pageview');
  %body{:xmlns => "http://www.w3.org/1999/xhtml"}
    %stuarttettdotcom-app#app{:detail => "souschef"}
    %section#contentDetails{:style => "display: none; visibility: hidden; min-height: 100vh;"}
      #bar.progress-container.fade-in
        #progress-bar.progress-bar

      / Prototype
      .one-col.col-reset.align-left.special
        %h1.special
          Prototype
      .one-col.col-reset.align-left
        %h3 Interact with a prototype
        %p Click anywhere on the prototype to get clues of which parts are interactive. Then scroll down to read the case studyâ€¦
      %protopie-prototype.row-span-2.two-col{:revision => '4', :key => 'Gc1z2YuVnEy', :baseurl => '016539f2-7081-1241-8370-7e4c54df2ffa/0165ef1d-85d4-140b-9501-77f23b48770e', :mockType => 'ViewerMock--iPhone8'}
      / Problem
      .one-col.col-reset.align-left.special
        %h1.special
          Problem
      .one-col.col-reset
        %h3 For working professionals, weeknight dinners are an afterthought.
        %p Often people don't think about it until their commute home. They look in their fridge paralyzed. They often end up ordering delivery.
      %figure.image.cover.fourSeventyTwo.row-span-2{:style => "background-image: url(#{"/images/souschef-fridge.png"})"}
      %figure.image.contain.fourSeventyTwo.row-span-2{:style => "background-image: url(#{"/images/souschef-caviar.jpg"})"}
      .one-col
        %h3 Which leads to ordering $40 pizzas from Caviar.
        %p My co-founder and I wanted to see if digital technology could improve this experience. He led the development, while I led the interface and experience design.
      .one-col
        %h3 How might technology help busy people with their weeknight meals?
        %p We decided to create a platform around delivering convenient recipes suggested based on the ingredients you have on hand.
      %figure.image.cover.fourSeventyTwo.row-span-2{"aria-label" => "", :style => "background-image: url(#{"/images/souschef-problem.jpg"})"}

      / Research
      .one-col.col-reset.align-left.special
        %h1.special
          Research
      .one-col.col-reset
        %h3 I created personas from user interviews.
        %p I interviewed and observed to learn more about people's experiences with meal-planning and cooking.
      .overlap.one-col
        %figure.box1
          %img{:alt => "Schoolteacher Persona", :src => "/images/souschef-persona1.png"}/
        %figure.box2
          %img{:alt => "Food Nerd Persona", :src => "/images/souschef-persona2.png"}/
        %figure.box3
          %img{:alt => "Working Mom Personal", :src => "/images/souschef-persona3.png"}/
      .overlap.one-col
        %figure.box1
          %img{:alt => "Food Nerd Recipe Selection", :src => "/images/souschef-foodnerd-recipe-selection.png"}/
        %figure.box2
          %img{:alt => "Retired Schoolteacher Recipe Selection", :src => "/images/souschef-retired-recipe-selection.png"}/
        %figure.box3
          %img{:alt => "Working Mom Recipe Selection", :src => "/images/souschef-mom-recipe-selection.png"}/
      .one-col
        %h3 I identified time, quality, and cost as important factors.
        %p Each persona balances time, quality, and cost differently. The Food Nerd prioritizes quality, the Working Mom&#8212;time, and the schoolteacher&#8212;cost.

      / Interaction
      .one-col.col-reset.align-left.special
        %h1.special
          Interaction
      / > Filter Interaction
      .one-col.col-reset
        %h3.grid-span.align-left I explored how to use time, quality, and cost to organize the recipes.
        %p By simplifying down to the three factors from the personas, I eliminated the need for filtering. Sorting by these factors meant no results are excluded.
      .overlap.one-col
        %figure.box1
          %img{:alt => "Filter Flow", :src => "/images/souschef-filter-flow.png"}/
        %figure.box2
          %img{:alt => "Filter View Variations", :src => "/images/souschef-Filter-Variations.png"}
      %figure.image.contain.fourSeventyTwo{"aria-label" => "", :style => "background-image: url(#{"/images/souschef-sorting.png"})"}
      .one-col
        %h3 This led me to give the user control over which recipes they saw first.
        %p I simplified the interface down to two simple arrow buttons to reorder the sorting priority.
        %p The option can be accessed by a pull-down gesture from the top of the screen
      %figure.image.contain.fourSeventyTwo{"aria-label" => "", :style => "background-image: url(#{"/images/souschef-sorting-full.png"})"}
      %figure.image.contain.fourSeventyTwo{"aria-label" => "", :style => "background-image: url(#{"/images/souschef-sorting-tapped.png"})"}

      / > Recipe Interaction
      %img.squiggle{:src => "/images/wave-dull.svg"}/
      .one-col.col-reset
        %h3.grid-span.align-left To explore recipes, I decided on a horizontal carousel.
        %p Most recipe apps I researched used a vertical collection of recipe cards. But they don't have much beyond a photo and a title.
        %p I opted for a carousel to help the user make an informed decision more quickly.
      %figure.one-col
        %img{:alt => "Recipe View Variations", :src => "/images/souschef-Recipes-Variations.png"}/
      .one-col
        %h3 The recipe view went through many iterations.
        %p I iterated on the recipe view, periodically getting user feedback. This led me to separate out "Prep" time, and simplify the interface.
      %figure.image.contain.fourSeventyTwo.grid-span{"aria-label" => "", :style => "background-image: url(#{"/images/souschef-recipe-iterations.png"})"}
      .one-col
        %h3 With the final recipe card having prep and cook time, rating, and cost.
        %p I simplified down until I had it paired down to something easy to digest quickly, but enough information to make a decision.
      %figure.image.contain.fourSeventyTwo{"aria-label" => "", :style => "background-image: url(#{"/images/souschef-recipe-final.png"})"}
      %figure.image.contain.fourSeventyTwo{"aria-label" => "", :style => "background-image: url(#{"/images/souschef-recipe-loading.png"})"}
      %figure.image.contain.fourSeventyTwo{"aria-label" => "", :style => "background-image: url(#{"/images/souschef-recipe-full-final.png"})"}

      / > Ingredient Interaction
      %img.squiggle{:src => "/images/wave-dull.svg"}/
      .two-col.grid-span.align-left
        %h3 I designed the pantry to keep track of ingredients, but is a lot of work for the user.
        %p My first iterations involved typing to search and add ingredients. So I wondered, how might we make entering ingredients easier?
      %figure.image.contain.grid-span.fourSeventyTwo{"aria-label" => "", :style => "background-image: url(#{"/images/souschef-pantry-views.png"})"}
      .one-col
        %h3 I explored camera vision to recognize foods.
        %p We explored using camera vision to identify raw ingredients and scan receipts.
        %p Unfortunately, it's not reliable enough to be the primary method of input at this time.
      %figure.image.contain.fourSeventyTwo1{"aria-label" => "", :style => "background-image: url(#{"/images/souschef-scan-receipt.png"})"}
      %figure.image.contain.fourSeventyTwo1{"aria-label" => "", :style => "background-image: url(#{"/images/souschef-scan-foods.png"})"}
      .two-col.grid-span.align-left
        %h3 But settled on a tap gesture to quickly add common ingredients.
        %p In exploring more realistic methods of simple ingredient entry, I designed a "Quick Add" feature to simply tap the most common ingredients.
        %p An expanded version shows more foods by category.
      %figure.image.contain.fourSeventyTwo1{"aria-label" => "", :style => "background-image: url(#{"/images/souschef-pantry-loading.png"})"}
      %figure.image.contain.fourSeventyTwo1{"aria-label" => "", :style => "background-image: url(#{"/images/souschef-pantry-tap.png"})"}
      %figure.image.contain.fourSeventyTwo1{"aria-label" => "", :style => "background-image: url(#{"/images/souschef-pantry-delete.png"})"}

      %figure.image.contain.fourSeventyTwo1.col-reset{"aria-label" => "", :style => "background-image: url(#{"/images/souschef-quick-add.gif"})"}
      %figure.image.contain.fourSeventyTwo1{"aria-label" => "", :style => "background-image: url(#{"/images/souschef-quick-add-expanded.png"})"}
      %figure.image.contain.fourSeventyTwo1{"aria-label" => "", :style => "background-image: url(#{"/images/souschef-quick-add-search.png"})"}
      %figure.image.contain.fourSeventyTwo1{"aria-label" => "", :style => "background-image: url(#{"/images/souschef-new-recipes.gif"})"}

      / Visual Design
      .one-col.col-reset.align-left.special
        %h1.special
          Visual Design
      .one-col.col-reset
        %h3 Lucky Peach magazine served as an initial inspiration.
        %p I love the attitude around Lucky Peach and initially started with a grungier look. But I felt that a much cleaner look was better suited for a mobile app.
        %p I did adopt the "splats" to maintain a little bit of that personality.
      .one-col.stackedImages
        %figure.image.contain{"aria-label" => "", :style => "margin: 20px; min-height: 100px; background-image: url(#{"/images/souschef-lucky-peach-logo.png"})"}
        %figure.image.contain{"aria-label" => "", :style => "min-height: 200px; background-image: url(#{"/images/souschef-lucky-peach-bread.png"})"}
      -# %figure.image.contain.fourSeventyTwo1.one-blank-column{"aria-label" => "", :style => "background-image: url(#{"/images/souschef-bg-pattern.png"})"}
      %figure.image.contain.fourSeventyTwo{"aria-label" => "", :style => "background-image: url(#{"/images/souschef-typography.png"})"}
      %figure.image.contain.fourSeventyTwo{"aria-label" => "", :style => "background-image: url(#{"/images/souschef-style-guide.png"})"}

      / Learnings
      %img.squiggle{:src => "/images/wave-dull.svg"}/
      .one-col.col-reset.align-left.special
        %h1.special
          Learnings
      .grid-span.two-col
        %ol.dark-list
          %li.one
            The tech of computer vision isnâ€™t production ready for this problem.
          %li.two
            Look beyond the bottom tab bar for navigation.
          %li.three
            Matching users with the right recipes is just one facet of getting busy people to cook.
      / Footer
      %blockquote.credits
        %h4 Additional Credits: Shane Vitarana&#8212;Developer/Co&#x2011;Founder
    %footer#footer.footer.fade-in.z3
      %stt-scroll-btn.btn-bc.z3.invert{:onclick => "TweenLite.to(window, 1, {scrollTo:0});", :style => ""}
    %script{:src => "https://cdnjs.cloudflare.com/ajax/libs/ScrollMagic/2.0.5/ScrollMagic.min.js"}
    %script{:src => "https://cdnjs.cloudflare.com/ajax/libs/gsap/1.20.4/TweenLite.min.js"}
    /build:js /scripts/main.min.js
    %script{:src => "../scripts/animation.gsap.min.js"}
    %script{:src => "../scripts/utils.js"}
    %script{:src => "../scripts/main.js"}
    / endbuild
    %script#detailsScript
      loadCaseAnimation();
